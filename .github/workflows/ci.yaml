name: build

on:
  push:
    branches:
      - develop
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Create local.properties
        shell: bash
        run: |
          echo "BACKEND_URL=${{ secrets.BACKEND_URL }}" >> local.properties &&
          echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> local.properties

      - name: Print local.properties
        shell: bash
        run: cat local.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Check Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Run Detekt
        run: ./gradlew detekt

  unit-tests:
    needs: check
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Create local.properties
        shell: bash
        run: |
          echo "BACKEND_URL=${{ secrets.BACKEND_URL }}" >> local.properties &&
          echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> local.properties

      - name: Print local.properties
        shell: bash
        run: cat local.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run Tests
        run: ./gradlew test

  androidTest:
    needs: check
    name: Instrumented tests
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [ 30 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Create local.properties
        shell: bash
        run: |
          echo "BACKEND_URL=${{ secrets.BACKEND_URL }}" >> local.properties &&
          echo "FIREBASE_DATABASE_URL=${{ secrets.FIREBASE_DATABASE_URL }}" >> local.properties

      - name: Print local.properties
        shell: bash
        run: cat local.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avdcache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avdcache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          arch: x86_64
          target: default # No ATD in API 26
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          disk-size: 6000M
          heap-size: 600M
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew connectedDebugAndroidTest --daemon

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '*/build/reports/androidTests'
